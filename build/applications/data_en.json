{"sections":[{"id":"41-solving-linear-systems-of-equations-using-hhl","title":"4.1 Solving Linear Systems of Equations using HHL","status":"","translated":"","background":"","goals":0,"duration":5,"steps":["step-0"]},{"id":"42-simulating-molecules-using-vqe","title":"4.2 Simulating Molecules using VQE","status":"","translated":"","background":"","goals":0,"duration":5,"steps":["step-1"]},{"id":"43-solving-combinatorial-optimization-problems-using-qaoa","title":"4.3 Solving combinatorial optimization problems using QAOA","status":"","translated":"","background":"","goals":0,"duration":5,"steps":["step-2"]},{"id":"44-solving-satisfiability-problems-using-grovers-algorithm","title":"4.4 Solving Satisfiability Problems using Grover's Algorithm","status":"","translated":"","background":"","goals":0,"duration":5,"steps":["step-3"]},{"id":"56-hybrid-quantum-classical-neural-networks-with-pytorch-and-qiskit","title":"5.6 Hybrid quantum-classical Neural Networks with PyTorch and Qiskit","status":"","translated":"","background":"","goals":0,"duration":5,"steps":["step-4"]},{"id":"47-variational-quantum-linear-solver","title":"4.7 Variational Quantum Linear Solver","status":"","translated":"","background":"","goals":0,"duration":5,"steps":["step-5"]}],"steps":[{"id":"step-0","section":"41-solving-linear-systems-of-equations-using-hhl","goals":[],"html":"<x-step id=\"step-0\" goals=\"\"><p><span class=\"sentence\">TODO</span></p></x-step>"},{"id":"step-1","section":"42-simulating-molecules-using-vqe","goals":[],"html":"<x-step id=\"step-1\" goals=\"\"><p><span class=\"sentence\">TODO</span></p></x-step>"},{"id":"step-2","section":"43-solving-combinatorial-optimization-problems-using-qaoa","goals":[],"html":"<x-step id=\"step-2\" goals=\"\"><p><span class=\"sentence\">TODO</span></p></x-step>"},{"id":"step-3","section":"44-solving-satisfiability-problems-using-grovers-algorithm","goals":[],"html":"<x-step id=\"step-3\" goals=\"\"><p><span class=\"sentence\">TODO</span></p></x-step>"},{"id":"step-4","section":"56-hybrid-quantum-classical-neural-networks-with-pytorch-and-qiskit","goals":[],"html":"<x-step id=\"step-4\" goals=\"\"><p><span class=\"sentence\">TODO</span></p></x-step>"},{"id":"step-5","section":"47-variational-quantum-linear-solver","goals":[],"html":"<x-step id=\"step-5\" goals=\"\"><p><span class=\"sentence\">TODO</span></p></x-step>"}],"goals":0,"title":"4. Quantum Algorithms for Applications"}